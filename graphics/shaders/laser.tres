[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform bool visible;
uniform bool phase;
uniform float width : hint_range(0.5, 10.0, 0.1);
uniform float alpha : hint_range(0.0, 1.0, 0.1);

void fragment() {
	if (visible) {
		if (phase)
		{
			COLOR = vec4(1, 0, 0 , 0.2)
		}
		else {
			COLOR.rgb = vec3(distance(vec2(UV.x, UV.y), vec2(0.5, UV.y))/width);
			COLOR.rgb = mix(COLOR.rgb, (COLOR.rgb-vec3(1))*vec3(-1), 1);
			if (lessThan(COLOR.rgb, vec3(0.4))==bvec3(true)) {
				COLOR.a = 0.0;
			}
		}
	} else {
		COLOR.a = 0.0;
	}
	COLOR.a = clamp(COLOR.a-alpha, 0, 1);
}"

[resource]
shader = SubResource( 1 )
shader_param/visible = false
shader_param/phase = true
shader_param/width = 10.0
shader_param/alpha = 0.0
